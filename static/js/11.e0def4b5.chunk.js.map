{"version":3,"sources":["forms/Select/styles.module.scss","forms/SelectWithForm/styles.module.scss","modules/Settings/pages/Settings/components/Section/styles.module.scss","modules/Settings/pages/Settings/components/CommonInfo/styles.module.scss","modules/Settings/pages/Settings/components/Security/styles.module.scss","modules/Settings/pages/Settings/components/Email/styles.module.scss","modules/Settings/pages/Settings/styles.module.scss","forms/Select/index.jsx","forms/SelectWithForm/index.jsx","modules/Settings/pages/Settings/components/Section/index.jsx","modules/Settings/pages/Settings/components/CommonInfo/validate.js","modules/Settings/pages/Settings/components/CommonInfo/index.jsx","modules/Settings/pages/Settings/components/CommonInfo/bindings.js","modules/Settings/pages/Settings/components/Security/validate.js","modules/Settings/pages/Settings/components/Security/index.jsx","modules/Settings/pages/Settings/components/Email/validate.js","modules/Settings/pages/Settings/components/Email/index.jsx","modules/Settings/pages/Settings/index.jsx"],"names":["module","exports","Select","memo","props","options","value","defaultValue","placeholder","onChange","hasError","label","name","disabled","dropdownRef","useRef","useState","selectValue","setSelectValue","isOpened","setIsOpened","prevValue","usePrevious","useOnClickOutside","onSelectValue","useCallback","onClickOption","onClickHeader","renderDropDownValue","useMemo","option","find","className","styles","headerText","headerPlaceholder","renderDropDownHeader","cn","header","headerError","onClick","arrow","opened","renderDropDownBox","box","map","isSelected","key","optionSelected","renderDropDown","selectWrap","labelError","labelDisabled","htmlFor","ref","dropdown","useEffect","SelectWithForm","input","meta","error","submitError","touched","field","errorText","Section","title","children","section","head","body","values","COUNTRIES","commonConstants","CommonInfo","actions","useMapActions","updateProfile","userThunks","loadProfile","useMapState","state","userSelectors","getUserInfo","contacts","initialValues","first","last","country","email","phone","telegram","onSubmit","a","payload","validate","render","handleSubmit","submitting","pristine","invalid","noValidate","FullLoader","hasText","row","col3","InputWithForm","col","getDictionary","BaseButton","text","skin","type","errors","old_password","new_password","Security","console","log","new_email","Email","Settings","PageLayout","pageTitle"],"mappings":"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","file":"static/js/11.e0def4b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"styles_inputWrap__3MNs5\",\"label\":\"styles_label__1ly9P\",\"labelDisabled\":\"styles_labelDisabled__32BQJ\",\"dropdown\":\"styles_dropdown__2AG-D\",\"header\":\"styles_header__2FL-T\",\"headerError\":\"styles_headerError__nHk1I\",\"headerText\":\"styles_headerText__2Utpl\",\"headerPlaceholder\":\"styles_headerPlaceholder__ia11Q\",\"arrow\":\"styles_arrow__PmkpS\",\"opened\":\"styles_opened__2FXBs\",\"box\":\"styles_box__2DdhG\",\"option\":\"styles_option__3QLe5\",\"optionSelected\":\"styles_optionSelected__2MIBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"styles_field__2F80e\",\"errorText\":\"styles_errorText__1nftY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"styles_section__13ZV9\",\"head\":\"styles_head__3UMLb\",\"title\":\"styles_title__3japo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"styles_actions__1umwS\",\"row\":\"styles_row__3qAQf\",\"col\":\"styles_col__2LPVm\",\"col3\":\"styles_col3__2Tvv-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"styles_actions__zK6Ut\",\"row\":\"styles_row__1-mSB\",\"col\":\"styles_col__2RGOb\",\"col3\":\"styles_col3__2XI4v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"styles_actions__3SBoA\",\"row\":\"styles_row__3PKih\",\"col\":\"styles_col__3mIZF\",\"col3\":\"styles_col3__3yM9K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"styles_box__OaI5-\"};","import React, { memo, useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport { useOnClickOutside, usePrevious } from 'src/hooks'\n\nimport styles from './styles.module.scss'\n\nconst SelectRaw = (props) => {\n  const { options, value, defaultValue = '', placeholder, onChange, hasError, label, name, disabled } = props\n\n  const dropdownRef = useRef(null)\n  const [selectValue, setSelectValue] = useState(value || defaultValue)\n  const [isOpened, setIsOpened] = useState(false)\n  const prevValue = usePrevious(selectValue)\n\n  useOnClickOutside(dropdownRef, () => {\n    setIsOpened(false)\n  })\n\n  const onSelectValue = useCallback(\n    (value) => {\n      setSelectValue(value)\n      onChange(value)\n    },\n    [onChange],\n  )\n\n  const onClickOption = useCallback(\n    (value) => {\n      onSelectValue(value)\n      setIsOpened(false)\n    },\n    [onSelectValue],\n  )\n\n  const onClickHeader = useCallback(() => {\n    setIsOpened(!isOpened)\n  }, [isOpened])\n\n  const renderDropDownValue = useMemo(() => {\n    if (selectValue) {\n      const option = options.find((option) => option.value === selectValue)\n\n      return <div className={styles.headerText}>{option && option.label}</div>\n    }\n\n    return <div className={styles.headerPlaceholder}>{placeholder}</div>\n  }, [selectValue, options, placeholder])\n\n  const renderDropDownHeader = useMemo(() => {\n    return (\n      <div\n        className={cn(styles.header, {\n          [styles.headerError]: hasError,\n        })}\n        onClick={onClickHeader}\n      >\n        {renderDropDownValue}\n        <span\n          className={cn(styles.arrow, {\n            [styles.opened]: isOpened,\n          })}\n        />\n      </div>\n    )\n  }, [isOpened, onClickHeader, renderDropDownValue, hasError])\n\n  const renderDropDownBox = useMemo(() => {\n    return (\n      <div className={styles.box}>\n        <div className={cn(styles.options)}>\n          {options.map((option) => {\n            const { label, value } = option\n            const isSelected = value === selectValue\n\n            return (\n              <button\n                key={`dropdown_${value}`}\n                className={cn(styles.option, {\n                  [styles.optionSelected]: isSelected,\n                })}\n                onClick={() => onClickOption(value)}\n              >\n                {label}\n              </button>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }, [options, selectValue, onClickOption])\n\n  const renderDropDown = useMemo(() => {\n    return (\n      <div className={styles.selectWrap}>\n        {label && (\n          <label\n            className={cn(styles.label, {\n              [styles.labelError]: hasError,\n              [styles.labelDisabled]: disabled,\n            })}\n            htmlFor={name}\n          >\n            {label}\n          </label>\n        )}\n        <div ref={dropdownRef} className={styles.dropdown}>\n          {renderDropDownHeader}\n          {isOpened && renderDropDownBox}\n        </div>\n      </div>\n    )\n  }, [renderDropDownHeader, renderDropDownBox, isOpened, disabled, hasError, label, name])\n\n  useEffect(() => {\n    if (!defaultValue && prevValue && !value) setSelectValue('')\n  }, [value, prevValue, defaultValue])\n\n  if (options) {\n    return renderDropDown\n  }\n\n  return null\n}\n\nSelectRaw.propTypes = {\n  options: PropTypes.array.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n}\n\nexport const Select = memo(SelectRaw)\nexport default Select\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { Field } from 'react-final-form'\n\nimport Select from '../Select'\n\nimport styles from './styles.module.scss'\n\nconst SelectWithFormRaw = ({ name, ...props }) => {\n  return (\n    <Field name={name}>\n      {({ input, meta }) => {\n        const hasError = (meta.error || meta.submitError) && meta.touched\n        return (\n          <div className={styles.field}>\n            <Select {...input} {...props} hasError={hasError} />\n            {hasError && <div className={styles.errorText}>{meta.error || meta.submitError}</div>}\n          </div>\n        )\n      }}\n    </Field>\n  )\n}\n\nSelectWithFormRaw.propTypes = {\n  name: PropTypes.string.isRequired,\n}\n\nconst SelectWithForm = memo(SelectWithFormRaw)\nexport default SelectWithForm\n","import React, { memo } from 'react'\n\nimport styles from './styles.module.scss'\n\nconst SectionRaw = ({ title, children }) => {\n  return (\n    <div className={styles.section}>\n      <div className={styles.head}>\n        <div className={styles.title}>{title}</div>\n      </div>\n      <div className={styles.body}>{children}</div>\n    </div>\n  )\n}\n\nexport const Section = memo(SectionRaw)\nexport default Section\n","export default (values) => {\n  const errors = {}\n\n  // if (!values.first) {\n  //   errors.first = 'Required field'\n  // }\n\n  // if (!values.last) {\n  //   errors.last = 'Required field'\n  // }\n\n  // if (!values.country) {\n  //   errors.country = 'Required field'\n  // }\n\n  // if (!values.email) {\n  //   errors.email = 'Required field'\n  // }\n\n  // if (!values.phone) {\n  //   errors.phone = 'Required field'\n  // }\n\n  // if (!values.telegram) {\n  //   errors.telegram = 'Required field'\n  // }\n\n  return errors\n}\n","import React, { memo, useCallback, useEffect, useMemo } from 'react'\nimport { Form } from 'react-final-form'\n\nimport { getDictionary } from 'src/services'\nimport { commonConstants } from 'src/constants'\n\nimport BaseButton from 'src/components/BaseButton'\nimport InputWithForm from 'src/forms/InputWithForm'\nimport SelectWithForm from 'src/forms/SelectWithForm'\nimport FullLoader from 'src/components/FullLoader'\n\nimport Section from '../Section'\nimport validate from './validate'\n\nimport styles from './styles.module.scss'\nimport { useMappedActions, useMappedState } from './bindings'\nconst { COUNTRIES } = commonConstants\n\nconst CommonInfoRaw = () => {\n  const actions = useMappedActions()\n  const { name, contacts } = useMappedState()\n\n  useEffect(() => {\n    actions.loadProfile()\n  }, [actions])\n\n  const initialValues = useMemo(() => {\n    const { first, last } = name\n    const { country, email, phone, telegram } = contacts\n\n    return {\n      first,\n      last,\n      country,\n      email,\n      phone,\n      telegram,\n    }\n  }, [name, contacts])\n\n  const onSubmit = useCallback(\n    async (values) => {\n      const { first, last, country, email, phone, telegram } = values\n      const payload = {\n        name: {\n          first,\n          last,\n        },\n        contacts: {\n          country,\n          email,\n          phone,\n          telegram,\n        },\n      }\n\n      const errors = await actions.updateProfile(payload)\n\n      // if (errors) {\n      //   return errors\n      // }\n    },\n    [actions],\n  )\n\n  return (\n    <Form\n      validate={validate}\n      onSubmit={onSubmit}\n      initialValues={initialValues}\n      render={({ handleSubmit, submitting, pristine, invalid, ...other }) => {\n        return (\n          <form onSubmit={handleSubmit} noValidate>\n            {submitting && <FullLoader hasText />}\n            <Section title=\"Information\">\n              <div className={styles.row}>\n                <div className={styles.col3}>\n                  <InputWithForm name=\"userId\" label=\"User ID\" value=\"13948921989438\" disabled />\n                </div>\n                <div className={styles.col3}>\n                  <InputWithForm name=\"first\" label=\"First name\" value={name.first} />\n                </div>\n                <div className={styles.col3}>\n                  <InputWithForm name=\"last\" label=\"Last name\" value={name.last} />\n                </div>\n              </div>\n            </Section>\n            <Section title=\"Contacts\">\n              <div className={styles.row}>\n                <div className={styles.col}>\n                  <SelectWithForm name=\"country\" label=\"Country\" options={getDictionary(COUNTRIES)} />\n                </div>\n                <div className={styles.col}>\n                  <InputWithForm name=\"email\" label=\"E-mail\" />\n                </div>\n                <div className={styles.col}>\n                  <InputWithForm name=\"phone\" label=\"Phone number\" />\n                </div>\n                <div className={styles.col}>\n                  <InputWithForm name=\"telegram\" label=\"Telegram\" />\n                </div>\n              </div>\n            </Section>\n            <div className={styles.actions}>\n              <BaseButton text=\"Safe change\" skin=\"yellow\" type=\"submit\" disabled={submitting || pristine || invalid} />\n            </div>\n          </form>\n        )\n      }}\n    />\n  )\n}\n\nexport const CommonInfo = memo(CommonInfoRaw)\nexport default CommonInfo\n","import { useMapState, useMapActions } from 'src/hooks'\nimport { userThunks } from 'src/thunks'\nimport { userSelectors } from 'src/selectors'\n\nexport const useMappedState = () => {\n  return useMapState((state) => {\n    return {\n      ...userSelectors.getUserInfo(state),\n    }\n  })\n}\n\nexport const useMappedActions = () => {\n  return useMapActions({\n    updateProfile: userThunks.updateProfile,\n    loadProfile: userThunks.loadProfile,\n  })\n}\n","export default (values) => {\n  const errors = {}\n\n  if (!values.old_password) {\n    errors.old_password = 'Required field'\n  }\n\n  if (!values.new_password) {\n    errors.new_password = 'Required field'\n  }\n\n  return errors\n}\n","import React, { memo, useCallback } from 'react'\nimport { Form } from 'react-final-form'\n\nimport BaseButton from 'src/components/BaseButton'\n\nimport InputWithForm from 'src/forms/InputWithForm'\nimport FullLoader from 'src/components/FullLoader'\n\nimport Section from '../Section'\nimport validate from './validate'\n\nimport styles from './styles.module.scss'\n\nconst SecurityRaw = () => {\n  const onSubmit = useCallback(async (values) => {\n    console.log('Security onSubmit values', values)\n  }, [])\n\n  return (\n    <Form\n      validate={validate}\n      onSubmit={onSubmit}\n      render={({ handleSubmit, submitting, pristine, invalid }) => {\n        return (\n          <form onSubmit={handleSubmit} noValidate>\n            {submitting && <FullLoader hasText />}\n            <Section title=\"Security\">\n              <div className={styles.row}>\n                <div className={styles.col}>\n                  <InputWithForm name=\"old_password\" label=\"Old password\" />\n                </div>\n                <div className={styles.col}>\n                  <InputWithForm name=\"new_password\" label=\"New password\" />\n                </div>\n              </div>\n            </Section>\n\n            <div className={styles.actions}>\n              <BaseButton text=\"Safe change\" type=\"submit\" skin=\"yellow\" disabled={submitting || pristine || invalid} />\n            </div>\n          </form>\n        )\n      }}\n    />\n  )\n}\n\nexport const Security = memo(SecurityRaw)\nexport default Security\n","export default (values) => {\n  const errors = {}\n\n  if (!values.new_email) {\n    errors.new_email = 'Required field'\n  }\n\n  return errors\n}\n","import React, { memo, useCallback } from 'react'\nimport { Form } from 'react-final-form'\n\nimport BaseButton from 'src/components/BaseButton'\n\nimport InputWithForm from 'src/forms/InputWithForm'\nimport FullLoader from 'src/components/FullLoader'\n\nimport Section from '../Section'\nimport validate from './validate'\n\nimport styles from './styles.module.scss'\n\nconst EmailRaw = () => {\n  const onSubmit = useCallback(async (values) => {\n    console.log('Email onSubmit values', values)\n  }, [])\n\n  return (\n    <Form\n      validate={validate}\n      onSubmit={onSubmit}\n      render={({ handleSubmit, submitting, pristine, invalid }) => {\n        return (\n          <form onSubmit={handleSubmit} noValidate>\n            {submitting && <FullLoader hasText />}\n            <Section title=\"E-mail\">\n              <div className={styles.row}>\n                <div className={styles.col}>\n                  <InputWithForm name=\"new_email\" label=\"New e-mail\" />\n                </div>\n              </div>\n            </Section>\n\n            <div className={styles.actions}>\n              <BaseButton text=\"Safe change\" type=\"submit\" skin=\"yellow\" disabled={submitting || pristine || invalid} />\n            </div>\n          </form>\n        )\n      }}\n    />\n  )\n}\n\nexport const Email = memo(EmailRaw)\nexport default Email\n","import React, { memo } from 'react'\n\nimport PageLayout from 'src/components/PageLayout'\n\nimport CommonInfo from './components/CommonInfo'\nimport Security from './components/Security'\nimport Email from './components/Email'\n\nimport styles from './styles.module.scss'\n\nconst SettingsRaw = () => {\n  return (\n    <PageLayout pageTitle={'Settings'}>\n      <div className={styles.box}>\n        <CommonInfo />\n      </div>\n      <div className={styles.box}>\n        <Email />\n      </div>\n      <div className={styles.box}>\n        <Security />\n      </div>\n    </PageLayout>\n  )\n}\n\nexport const Settings = memo(SettingsRaw)\nexport default Settings\n"],"sourceRoot":""}